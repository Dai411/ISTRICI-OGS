echo "insert the filenames of the top and the bottom of the layer"
read filetop
read filebot
echo " "

echo "migration and velocity parameters:"
echo " "
echo "nz,dz,fz?"
read nz
read dz
read fz
echo " "
echo "nx,dx,fx?"
read nx
read dx
read fx
echo " "
echo "near offset (absolute value in m) in the CIGs (kd.data and outfile1)"
read off0
absoff0=$off0
echo "number of offsets in the CIGs"
read noff
echo "offset increment (absolute value) in the CIGs"
read doff
echo " "
echo "min, max and CIG step at which you want to performe the velocity analyis"
echo "Attention: the step must be a multiple of the step used in the migration!"
read cdpmin
read cdpmax
read dcdp
echo " "
## Set parameters
input=kd.data_complete
input1=outfile1_complete
rpicks=res.p1
fold=$noff

## Set r-parameter sampling
nr=1001 dr=0.001 fr=-0.5
dzratio=2

## Do the residual moveout analyses.

rm -f filecig.su
rm -f mpick.dat

cdp=$cdpmin

while [ $cdp -le $cdpmax ]
do

echo -n "tmin=" >xmin
echo -n "tmax=" >xmax
awk '{print $1,$2=$2-30}' $filebot | grep $cdp | awk '{print $2}' >>xmin
awk '{print $1,$2=$2+30}' $filebot | grep $cdp | awk '{print $2}' >>xmax
cat xmin xmax >image.par

		echo "Starting Residual moveout analysis for cip $cdp"
		suwind <$input key=cdp min=$cdp max=$cdp | 
		surelan dzratio=$dzratio nr=$nr dr=$dr fr=$fr |
		suchw key1=dt key2=d1 b=1000 |
	        suwind par=image.par |
		sumean power=1. verbose=1 outpar=filecig 

		awk '{print $5}' filecig | a2b n1=1 | suaddhead ns=$nr | sushw key=d1 a=$dr |
		 sushw key=cdp a=$cdp >>filecig.su

cdp=`bc -l <<END
                $cdp + $dcdp
END`

done

echo " "
echo "Perform the picking of the semblance along the horizon"
## Do the residual moveout analyses.
echo " "
echo "Pick r-parameters by moving mouse and typing 's', type 'Q' when done"
echo
echo "Use the plot from Xmig as a guide to picking"

suximage perc=99.8 mpicks=mpick.dat f2=$cdpmin d2=$dcdp f1=$fr d1=$dr <filecig.su label2="CIG" label1="r-parameter" grid1=solid grid2=solid cmap=hsv2 wbox=700 hbox=200 

echo $fx,$nx,$dx >infocdp.txt
echo $filebot >infofile

ISTRICI/preparapickior

#interpola picks
echo "the file mpick_or.dat has been created"
echo "check the interpolation result"
# Vedi picks
awk '{print $3,$1}' mpicks_or.dat >mpick_semblance.dat
suximage f2=$cdpmin d2=$dcdp f1=$fr d1=$dr <filecig.su label2="CIG" label1="r-parameter" grid1=solid grid2=solid cmap=hsv2 wbox=700 hbox=200 curve=mpick_semblance.dat curvecolor=black npair=$nx    

pause

# nome dei file degli orizzonti

cp $filebot tmp
awk '{print $1,$2=$2-$2}' tmp >vfile_a.corr
rm tmp

cp vfile vfile_old
cp $filebot $filebot.old

#! /bin/sh
set -v

b2a <vfile n1=1 >vfile.a
cp vfile.a vfile.corr
cp vfile.a vfile.aold

echo $filetop >input_oriz
echo $filebot >>input_oriz

awk '{print $1,0}' $filebot >vfile_a.corr

## Set parameters
rpicks=res.p1

cdp=$cdpmin

rm -f mpick.dat

while [ $cdp -le $cdpmax ]
do

set +x

rm -f corr

### Combine the individual picks into a composite par file
echo "Editing pick files ..."

grep $cdp pick_or.dat >$rpicks

sed "s/  /,/g"<$rpicks >ttt    
sed "s/ /,/g" ttt >cig.par

grep $cdp mpicks_or.dat >mpicks.$cdp

#echo -n "$cdp " >corr
sed "s/  / /g"<mpicks.$cdp >>corr

awk '{print $3,$1}' corr >>mpick.dat

cp cig.par cig.par.$cdp

echo "dzdv par file: cig.par is ready"

### Clean up
rm mpicks.$cdp 
rm $rpicks

# determine depth derivatives from ratios from two migration outputs
#set -x

 nxx=1    
 nxw=5 nzw=5

minoff=$off0

#suwind<$input key=cdp max=$cdp min=$cdp |sushw key=trid a=1 | suwind key=offset min=$minoff >tmp1.su
#<tmp1.su susort -offset |sustrip>infile 
#suwind<$input1 key=cdp min=$cdp max=$cdp | sushw key=trid a=1 | suwind key=offset min=$minoff >tmp1.su
#<tmp1.su  susort -offset | sustrip>afile 

suwind<$input key=cdp max=$cdp min=$cdp |sushw key=trid a=1 >tmp1.su
<tmp1.su susort -offset |sustrip>infile 
suwind<$input1 key=cdp min=$cdp max=$cdp | sushw key=trid a=1  >tmp1.su
<tmp1.su  susort -offset | sustrip>afile 

surange <kd.data_complete | grep d1 | awk '{print "dz=",$2}' | sed -e 's/ //' >dzdv.par
surange <kd.data_complete | grep d2 | awk '{print "dx=",$2}' | sed -e 's/ //' >>dzdv.par
surange <kd.data_complete | grep ns | awk '{print "nz=",$2}' | sed -e 's/ //' >>dzdv.par
cat dzdv.par >>cig.par

> dzfile \
dzdv <infile par=cig.par nx=1 fx=$cdp fz=$fz \
 afile=afile dfile=dfile off0=$off0 noff=$noff doff=$doff nxw=$nxw nzw=$nzw
# off0=$absoff0 noff=$noff doff=$doff nxw=$nxw nzw=$nzw

#> dzfile \
#dzdv <infile par=cig.par nx=$nxx nz=2251 fx=$cdp fz=$fz dx=12.5 dz=2 \
# afile=afile dfile=dfile  \
# off0=-150 noff=$noff doff=-50 nxw=$nxw nzw=$nzw

echo "Add the value of dlambda to the original velocity to obtain new velocity"

# estimate velocity parameter perturbation from covariance of imaged
# depths

velpert<dfile dzfile=dzfile ncip=1 noff=$noff moff=$noff  \
>deltap.$cdp 


awk '{print $6}' deltap.$cdp >deltap.txt
#echo "if you want, you can change lambda in the file deltap.txt"
#pause

#
# correggo la griglia con lambda
#

echo -n "$nz $dz $fz $nx $dx $fx" >tmp

ISTRICI/correggigriglia

echo 'the velocity grid has been updated'

rm tmp

a2b <vfile.a1 n1=1 >vfile
mv vfile.a1 vfile.a
mv vfile_a.corr1 vfile_a.corr
mv vfile.corr1 vfile.corr

        cdp=`bc -l <<END
	                $cdp + $dcdp
END`

done

# rm -f deltap.* cig.par* xmin xmax image.par xmax1 xmax2 corr 

#echo 'interpolo la griglia delle correzzioni'
echo -n "$nz $dz $fz $nx $dx $fx" >tmp

ISTRICI/interpologriglia_or_new
awk '{print $1,$2}' oriznew >$filebot

a2b <vfile.a1 >vfile n1=1

echo 'END. the velocity grid has been updated'
echo " "
echo "the files have been updated:"
echo $filebot
echo vfile
echo "old files:"
echo $filebot.old
echo vfile_old

rm -f vfile.a1 vfile.a vfile_a.corr1 vfile_a.corr vfile.aold vfile.corr

#rm -f input_oriz

exit 0
